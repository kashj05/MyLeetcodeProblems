 public static void topSort(ArrayList<Edge> graph []){
        boolean vis [] = new boolean[graph.length];
        Stack <Integer> s = new Stack<>();   

        for(int i = 0; i<graph.length; i++){
            if(!vis[i]){
                topSortUtil(graph,i,vis,s); // modified dfs
            }
        }


        while(!s.isEmpty()){  //removing each element
            System.out.print(s.pop()+" ");
        }
    }

    public static void topSortUtil(ArrayList<Edge> graph[], int curr, boolean vis[], Stack s){

        vis[curr] = true;

        for(int i = 0; i<graph[curr].size(); i++){

            Edge e = graph[curr].get(i);  //here we are travelling the arraylist of arraylist
            if(!vis[e.dest]){
                topSortUtil(graph, e.dest, vis, s);
            }
        }

        s.push(curr);
    }

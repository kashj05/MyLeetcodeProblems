/*
Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    public Node flatten(Node head) {
        if (head == null) return head;

        Node curr = head;
        while (curr != null) {
            if (curr.child == null) {
                curr = curr.next; // move forward normally
            } else {
                Node child = curr.child;
                Node next = curr.next;

                // 1️⃣ Connect current node to child
                curr.next = child;
                child.prev = curr;
                curr.child = null;

                // 2️⃣ Go to the end of the child list
                Node tail = child;
                while (tail.next != null) {
                    tail = tail.next;
                }

                // 3️⃣ Connect tail of child list to the next node
                if (next != null) {
                    tail.next = next;
                    next.prev = tail;
                }
            }
        }
        return head;
    }
}
